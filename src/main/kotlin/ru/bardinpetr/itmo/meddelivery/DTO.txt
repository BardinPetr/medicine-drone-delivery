data class DroneDto(
     val typeOfDroneName: String?,
     val status: DroneStatus?,
     val locationLat: Double?,
     val locationLon: Double?,
     val flightTaskId: Long? = null,
      val id: Long? = null
 ) 
data class RequestDto(
    val userUsername: String?,
    val status: TaskStatus?,
    val medicalFacilityName: String?,
    val requestEntries: MutableList<RequestEntryDto> = mutableListOf(),
     val id: Long? = null
) 
data class RouteDto(
    val warehouseId: Long? = null,
    val medicalFacilityId: Long? = null,
    val routePoints: MutableList<RoutePointDto> = mutableListOf(),
     val id: Long? = null
) 
data class MedicalFacilityDto(
     val name: String?,
     val responsibleUserUsername: String?,
     val locationLat: Double?,
     val locationLon: Double?,
      val id: Long? = null
 ) 
data class RoutePointDto(
    val idRouteId: Long = 0,
    val idPointNumber: Int = 0,
    val locationLat: Double?,
    val locationLon: Double?
)
data class WarehouseDto(
    val name: String?,
    val locationLat: Double?,
    val locationLon: Double?,
    val products: MutableList<WarehouseProductsDto> = mutableListOf(),
     val id: Long? = null
) 
data class ProductTypeDto(val type: String?,  val id: Long? = null) 
data class FlightTaskDto(
    val requestId: Long? = null,
    val status: TaskStatus?,
    val productTypeProductTypeName: String?,
    val warehouseWarehouseName: String?,
    val medicalFacilityMedicalFacilityName: String?,
    val quantity: Int?,
    val routeId: Long? = null,
    val timestamp: Instant?,
     val id: Long? = null
) 
data class TypeOfDroneDto(val name: String?, val maxWeight: Long?, val speed: Double?,  val id: Long? = null) 
data class NoFlightZoneDto(val radius: Float?, val centerLat: Double?, val centerLon: Double?,  val id: Long? = null) 
data class RequestEntryDto(
    val requestId: Long? = null,
    val productTypeType: String?,
    val quantity: Int?,
    val fulfilledQuantity: Int = 0,
     val id: Long? = null
) 
data class WarehouseProductsDto(val idProductId: Long = 0, val idWarehouseId: Long = 0, val quantity: Int?)
enum class DroneStatus {
    IDLE, READY, FLYING_TO, FLYING_FROM
}
enum class TaskStatus {
    QUEUED, READY, PACKING, IN_PROGRESS, COMPLETED
}